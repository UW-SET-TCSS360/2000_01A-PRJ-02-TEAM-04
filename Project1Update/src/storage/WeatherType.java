/*
 * Project 1: Prepared for TCSS360 
 * By: Rory Fisher, Bree S. Dinish-Lomelli, Elias Hanna Salmo, Geoffrey Thomas Woulf, Kero Adib.
 */

package storage;

/**
 * Provides efficient weather lookup.
 * Supports some equivalence to strings.
 * @author Geoffrey Woulf
 * @author Rory Fisher
 */
public enum WeatherType {
	temp("Indoor Tempature","*f"),
	windchill("Wind Chill", ""),
	outtemp("Outdoor Tempature", "*f"),
	humidity("Indoor Humiditiy",  "%"),
	outhumidity("Outdoor Humidity",  "%"),
	wind("Wind Speed", " mph"),
	winddir("Wind Direction", ""),
	rainRate("Rainfall", " .in/Hr"),
	rain("Rain", " .in"),
	barometric("Pressure", " BAR");

	
	/**
	 * A name for a given type of weather.
	 */
	private final String myDescription;
	
	/**
	 * The units associated with a type of weather.
	 */
	private final String myUnits;
	/**
	 * Establishes a new enum of each weather type.
	 * @param theDescription
	 * @param theUnits
	 */
	private WeatherType(String theDescription, String theUnits) {
		myDescription = theDescription;
		myUnits = theUnits;
	}
	
	@Override
	public String toString() {
		return myDescription;
	}
	
	/**
	 * Returns the units associated with this measurement.
	 * @return Returns a string that reflects the units used in this measurement, 
	 * or "" if this data type is a special case where the units must be handled/generated by the user.
	 */
	public String getUnits() {
		return myUnits;
	}
}
